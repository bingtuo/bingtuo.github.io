<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BingT` 博客</title>
  
  <subtitle>随遇而安</subtitle>
  <link href="http://bingt.top/atom.xml" rel="self"/>
  
  <link href="http://bingt.top/"/>
  <updated>2023-07-16T14:21:06.630Z</updated>
  <id>http://bingt.top/</id>
  
  <author>
    <name>Bingt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Obsidian+Hexo+Git 博客方案</title>
    <link href="http://bingt.top/2023/07/d37bf00289d3.html"/>
    <id>http://bingt.top/2023/07/d37bf00289d3.html</id>
    <published>2023-07-16T08:38:40.000Z</published>
    <updated>2023-07-16T14:21:06.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建知识库"><a href="#创建知识库" class="headerlink" title="创建知识库"></a>创建知识库</h1><ul><li><p>可以将博客作为新的obsidian知识库来打开<br><img src="https://imgbing.vercel.app/img/20230716185728.png" alt="image.png"><br>打开后在目录中会生成一个<code>.obsidian</code>文件夹，这是Obsidian的配置文件，如果其他设备再次打开就不需要重新设置相关选项和安装插件了。<br><img src="https://imgbing.vercel.app/img/20230716190513.png" alt="image.png"></p></li><li><p>也可以直接把博客放进自己本来的一个库内<br><img src="https://imgbing.vercel.app/img/20230716185845.png" alt="image.png"></p></li></ul><h1 id="Obsidian的配置"><a href="#Obsidian的配置" class="headerlink" title="Obsidian的配置"></a>Obsidian的配置</h1><p>此时需要更改一些Obsidian的设置，以及下载一些有用的插件</p><h2 id="忽略多余文件"><a href="#忽略多余文件" class="headerlink" title="忽略多余文件"></a>忽略多余文件</h2><p>主要来编辑管理Markdown文件，所以需要设置来忽略一些文件，避免使用知识库搜索功能时，搜索到不必要的文件，提高搜索效率。</p><ul><li>打开左下角的<code>设置</code>，点击左侧列表中的<code>文件与链接</code>，在最下面找到<code>忽略文件</code>，点击右侧的<code>管理</code>按钮<br><img src="https://imgbing.vercel.app/img/20230716191358.png" alt="image.png"></li><li><p>点击条件右侧的<code>文本框</code><br><img src="https://imgbing.vercel.app/img/20230716191820.png" alt="image.png"></p></li><li><p>由于博客文章都存在<code>source</code>下，所以要把<code>source</code>所在的目录中的其他文件夹都忽略，记得<code>保存</code><br><img src="https://imgbing.vercel.app/img/20230716191856.png" alt="image.png"></p></li></ul><h2 id="文章管理"><a href="#文章管理" class="headerlink" title="文章管理"></a>文章管理</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><p>新建文件位置设置，方便以后新建Markdown文件</p><ul><li>还是点击左下角的<code>设置</code>，在<code>文件与链接</code>中，更改<code>新建笔记的存放位置</code>，并根据自己需求更改后面的存放位置<br><img src="https://imgbing.vercel.app/img/20230716192511.png" alt="image.png"></li></ul><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><h4 id="添加模板"><a href="#添加模板" class="headerlink" title="添加模板"></a>添加模板</h4><p>使用模板功能来以便写博客时快速插入格式</p><ul><li>打开设置，在<code>核心插件</code>页面中打开<code>模板</code><br><img src="https://imgbing.vercel.app/img/20230716192826.png" alt="image.png"></li><li>先在外面添加文件夹，将这个文件夹用来存放模板，点击左侧栏下方的<code>模板</code>，打开<code>模板</code>的详细设置，设置好刚才添加的<code>模板文件夹位置</code>，以及设置好相应的<code>日期格式</code>：<code>YYYY-MM-DD HH:mm:ss</code><br><img src="https://imgbing.vercel.app/img/20230716193402.png" alt="image.png"></li><li>在之前添加的模板文件夹中新建一个文件，编写好其中的内容<br><img src="https://imgbing.vercel.app/img/20230716193706.png" alt="image.png"><h4 id="模板的使用"><a href="#模板的使用" class="headerlink" title="模板的使用"></a>模板的使用</h4></li><li>按下<kbd>Ctrl</kbd> + <kbd>N</kbd>来新建文件，再点击最左侧的插入模板，选择之前的模板来插入<br><img src="https://imgbing.vercel.app/img/20230716194535.png" alt="image.png"></li></ul><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>Hexo博客部署一般用到git，Obsidian中就可以直接用插件来直接操作Git</p><h3 id="Obsidian-Git-插件"><a href="#Obsidian-Git-插件" class="headerlink" title="Obsidian Git 插件"></a>Obsidian Git 插件</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><ul><li>在设置中点击<code>第三方插件</code>关闭安全模式，然后社区插件市场点击<code>浏览</code>，搜索<code>Git</code>，安装列表中的<code>Obsidian Git</code><br><img src="https://imgbing.vercel.app/img/20230716203706.png" alt="image.png"></li><li>在第三方插件中将<code>Obsidian Git</code> 打开<br><img src="https://imgbing.vercel.app/img/20230716203824.png" alt="image.png"></li><li>点击<code>Obsidian Git</code>打开其详细设置，往下拉，找到<code>Custom base pat</code>h`输入自己库名<br><img src="https://imgbing.vercel.app/img/20230716204148.png" alt="image.png"><h4 id="忽略配置"><a href="#忽略配置" class="headerlink" title="忽略配置"></a>忽略配置</h4></li><li>在目录里创建一个<code>.gitignore</code>，添加<code>.obsidian/workspace</code></li><li>到Hexo博客的目录下创建<code>.gitignore</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">_multiconfig.yml</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4></li><li>按键盘<kbd>Ctrl</kbd> + <kbd>P</kbd>打开命令面板，输入<code>open source control view</code>打开操作面板<br><img src="https://imgbing.vercel.app/img/20230716205218.png" alt="image.png"></li><li>在右侧出现操作面板，按下图操作（保存-&gt;提交-&gt;推送），推送到Github仓库<br><img src="https://imgbing.vercel.app/img/20230716205744.png" alt="image.png"></li><li>想要每次自动拉取仓库，就打开<code>Pull updates on startup</code><h3 id="自动更新分类插件"><a href="#自动更新分类插件" class="headerlink" title="自动更新分类插件"></a>自动更新分类插件</h3>前面用模板功能来快速插入模板，但还是其中的分类<code>categories</code>需要手动改，配合Obsidian最好就是能根据文件夹的分类来自动配置<code>categories</code><h4 id="hexo-auto-category安装与配置"><a href="#hexo-auto-category安装与配置" class="headerlink" title="hexo-auto-category安装与配置"></a>hexo-auto-category安装与配置</h4>使用hexo-auto-category来基于文件夹自动配置分类信息</li><li>安装hexo-auto-category<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-auto-category --save</span><br></pre></td></tr></table></figure></li><li>在hexo配置文件<code>_config.yml</code>中添加<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Generate categories from directory-tree</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/xu-song/hexo-auto-category</span></span><br><span class="line"><span class="comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auto_category:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">depth:</span></span><br></pre></td></tr></table></figure><h4 id="使用Git钩子更新"><a href="#使用Git钩子更新" class="headerlink" title="使用Git钩子更新"></a>使用Git钩子更新</h4>这个插件只有执行<code>hexo g</code>的时候才会读取文件夹并更新<code>categories</code>分类信息，所以可以用Git钩子函数，在<code>commit</code>的时候先执行<code>hexo g</code>就能实现自动更新</li><li>在<code>.git/hooks</code>目录下新建一个<code>pre-commit</code>文件<br><img src="https://imgbing.vercel.app/img/20230716211352.png" alt="image.png"><br>可以在该文件中写入<code>echo abc</code>，然后执行<code>sh pre-commit</code>测试钩子能不能正常执行</li><li>没问题就将以下命令写入文件内<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">cd hexo-source-Repo &amp;&amp; hexo generate &amp;&amp; git add .</span><br></pre></td></tr></table></figure><div class="note info modern"><ol><li>第一行的<code>#!/bin/sh</code>不是注释</li><li>因为我的博客不是知识库根目录，所以前面加<code>cd hexo-source-Repo</code>以进入博客所在目录</li><li>后面加<code>git add .</code>是因为<code>hexo g</code>后所有文件信息会更新，所以要重新添加 </li></ol></div></li></ul><h1 id="快捷操作"><a href="#快捷操作" class="headerlink" title="快捷操作"></a>快捷操作</h1><p>在根目录新建一个Markdown文件，在其中可以通过URL来进行快捷操作</p><ul><li>在资源管理器中打开到博客所在目录，创建一个<code>runblog.bat</code>文件，写入以下命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start http://localhost:4000/</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>在主页Markdown文件中添加<code>[运行博客](hexo-source-Repo/runblog.bat)</code><br><img src="https://imgbing.vercel.app/img/20230716214316.png" alt="image.png"></p></li><li><p>点击直接执行<br><img src="https://imgbing.vercel.app/img/20230716214402.png" alt="image.png"></p><h2 id="安装Button插件"><a href="#安装Button插件" class="headerlink" title="安装Button插件"></a>安装Button插件</h2><p>用此插件可以将其美化为按钮</p></li><li>在第三方插件搜索<code>Buttons</code>安装并打开<br><img src="https://imgbing.vercel.app/img/20230716213245.png" alt="image.png"></li><li>使用快捷键<kbd>Ctrl</kbd> + <kbd>P</kbd>打开命令面板，输入并打开<code>Button Maker</code><br><img src="https://imgbing.vercel.app/img/20230716214647.png" alt="image.png"><h2 id="设置按钮信息"><a href="#设置按钮信息" class="headerlink" title="设置按钮信息"></a>设置按钮信息</h2></li><li>按钮名称<code>Button Name</code>输入<strong>运行博客</strong></li><li>按钮类型<code>Button Type</code>中选择<strong>Link - open a url or uri</strong></li><li>链接<code>Link</code>中输入<strong>obsidian://open?file=hexo-source-Repo/RunBlog.bat</strong>（这里hexo-source-Repo换成自己的博客目录）<br><img src="https://imgbing.vercel.app/img/20230716215727.png" alt="image.png"></li><li>拉到下面，点击<code>Insert Button</code>来插入按钮<br><img src="https://imgbing.vercel.app/img/20230716215916.png" alt="image.png"></li><li>此时的按钮点击后就可以快速执行命令来运行博客<br><img src="https://imgbing.vercel.app/img/20230716220102.png" alt="image.png"><br><strong>同样也可以用来上传同步博客功能等等</strong></li></ul>]]></content>
    
    
    <summary type="html">用Obsidian写笔记学习的同时来维护博客</summary>
    
    
    
    <category term="博客方案" scheme="http://bingt.top/categories/%E5%8D%9A%E5%AE%A2%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="obsidian" scheme="http://bingt.top/tags/obsidian/"/>
    
    <category term="hexo" scheme="http://bingt.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客 更换设备</title>
    <link href="http://bingt.top/2023/07/b46fd6a08ce8.html"/>
    <id>http://bingt.top/2023/07/b46fd6a08ce8.html</id>
    <published>2023-07-16T07:51:09.000Z</published>
    <updated>2023-07-16T14:22:02.747Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客部署在github上，由于更换电脑，需要重新搭建环境</p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li><p>下载并安装好Nodejs和git<br><a href="https://nodejs.org/en/download">Nodejs</a><br><a href="https://git-scm.com/">git</a></p></li><li><p>设置git全局邮箱和用户名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourgithubname&quot;</span><br><span class="line">git config --global user.email &quot;yourgithubemail&quot;</span><br></pre></td></tr></table></figure></li><li><p>设置ssh key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>生成后填到github</p></li><li><p>验证是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><p>安装hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li></ul><h1 id="本地项目部署"><a href="#本地项目部署" class="headerlink" title="本地项目部署"></a>本地项目部署</h1><ul><li>将项目clone到本地<br>在要放的文件夹下<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@......</span><br></pre></td></tr></table></figure></li><li>装好依赖<br>进入clone的文件夹下并安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm isntall</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>部署<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">更换电脑后，重新搭建环境</summary>
    
    
    
    <category term="博客方案" scheme="http://bingt.top/categories/%E5%8D%9A%E5%AE%A2%E6%96%B9%E6%A1%88/"/>
    
    
  </entry>
  
  <entry>
    <title>图床方案</title>
    <link href="http://bingt.top/2023/03/34273fe9a31f.html"/>
    <id>http://bingt.top/2023/03/34273fe9a31f.html</id>
    <published>2023-03-06T06:05:28.000Z</published>
    <updated>2023-07-16T14:27:08.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于Github仓库的图床"><a href="#基于Github仓库的图床" class="headerlink" title="基于Github仓库的图床"></a>基于Github仓库的图床</h1><div class="note info modern"><p><strong>优点：</strong></p><ol><li><p>用自己的仓库，安全稳定不跑路</p></li><li><p>图片跨设备管理</p></li><li><p>资源格式支持丰富，包括css、js等</p></li></ol><p><strong>缺点：</strong> </p><ol><li>每个仓库限制1个G容量（超过需要新建仓库）</li><li>github网络问题（可以挂公共拖管平台，自定义域名加速）</li></ol></div><h2 id="新建Github仓库"><a href="#新建Github仓库" class="headerlink" title="新建Github仓库"></a>新建Github仓库</h2><ol><li><p>登录Github官网，点击右上角的<code>+</code>号，并选择<code>New repository</code>创建一个新仓库。</p><p><img src="https://img.bingt.top/img/image-20230306145105744.png" alt=""></p></li><li><p>仓库名随意（这里我填入的是img），描述随意，可见性选<code>public</code>，最后点击页面下面的<code>Create repository</code>创建仓库。</p><p><img src="https://img.bingt.top/img/image-20230306151457174.png" alt="image-20230306151457174"></p></li><li><p>下载git，创建公钥并上传，让计算机与Github建立通信，具体教程百度。</p></li><li><p>测试是否连通，在本地创建一个文件夹（位置和名字随意），在该文件夹内右击打开<code>Git Bash</code>，然后输入<code>git clone</code>命令拷贝仓库（git clone后面替换成自己的仓库信息）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:bingtuo/img.git</span><br></pre></td></tr></table></figure><p><img src="https://img.bingt.top/img/image-20230306153053927.png" alt="image-20230306153053927"></p><p>命令正常跑完，看到多了<code>.git</code>文件夹（打开隐藏文件）就说明成功。</p><p><img src="https://img.bingt.top/img/image-20230306161354510.png" alt="image-20230306161354510"></p><p>随便复制个小文件放在<code>.git</code>文件夹所在的这个目录内（更改README.md也行），在此文件夹内右击打开<code>Git Bash</code>，然后依次输入一下命令，将文件推送到仓库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新图片&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">推送至github仓库</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>跑完命令后，浏览器在仓库中查看。</p><p><img src="https://img.bingt.top/img/image-20230306162329480.png" alt="image-20230306162329480"></p><p>此时仓库更新成功，以后的图片等文件就可以推上来。</p></li></ol><h2 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h2><div class="note info modern"><p>此方法可以绑定自定义域名，绑定域名后加载速度快，目前Vercel每月限流100GB</p></div><ol><li><p>注册并登录Vercel，进入<a href="https://vercel.com/dashboard">Vercel控制面板</a>，通过<code>Github</code>继续，选择刚刚创建的仓库<code>import</code>导入，然后直接<code>Deploy</code>部署。</p><p><img src="https://img.bingt.top/img/image-20230306164141185.png" alt="image-20230306164141185"></p><p><img src="https://img.bingt.top/img/image-20230306164217428.png" alt="image-20230306164217428"></p></li><li><p>点击进入该项目的控制台，在此添加新的域名，填入自己域名的二级域名，然后在你对应的域名解析控制台添加对应域名解析，等待生效。</p><p><img src="https://img.bingt.top/img/image-20230306164845245.png" alt="image-20230306164845245"></p></li><li><p>通过<code>自定义域名+路径</code>即可访问对应资源，例如<a href="https://img.bingt.top/img/cat1.webp">https://img.bingt.top/img/cat1.webp</a></p></li></ol><h1 id="Picgo结合Markdown实时上传"><a href="#Picgo结合Markdown实时上传" class="headerlink" title="Picgo结合Markdown实时上传"></a>Picgo结合Markdown实时上传</h1><div class="note info modern"><p>我使用的是Typora+Picgo</p></div><ol><li><p>下载<a href="[Releases · Molunerfinn/PicGo (github.com">Picgo</a>](<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a>))</p><p>选择适合自己的版本（我的是windows的64位）</p><p><img src="https://img.bingt.top/img/image-20230306170159112.png" alt="image-20230306170159112"></p></li><li><p>在插件中搜索<code>github-plus</code>并下载</p><p><img src="https://img.bingt.top/img/image-20230306170405945.png" alt="image-20230306170405945"></p></li><li><p>安装好插件，点击<code>图床设置</code>—-&gt;<code>githubPlus</code>进入githubPlus设置</p><p><img src="https://img.bingt.top/img/image-20230306170720248.png" alt="image-20230306170720248"></p></li><li><p>填写相应内容：</p><p><code>repo</code>：github用户名/仓库名</p><p><code>branch</code>：main</p><p><code>token</code>：获取自己的token(classic token，记得勾选repo)</p><p><code>path</code>：填入自己仓库下的文件保存路径</p><p><code>customUrl</code>：自定义域名</p><p><code>orgin</code>：github</p><p>确定并设为默认图床</p></li><li><p>进入Typora设置并修改为下面所示</p><p><img src="https://img.bingt.top/img/image-20230306171703455.png" alt="image-20230306171703455"></p><p>设置完毕，点击<code>验证图片上传选项</code>，验证成功。</p></li></ol>]]></content>
    
    
    <summary type="html">Typora使用github仓库作图床</summary>
    
    
    
    <category term="博客方案" scheme="http://bingt.top/categories/%E5%8D%9A%E5%AE%A2%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="图床" scheme="http://bingt.top/tags/%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="Github" scheme="http://bingt.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>C++测试</title>
    <link href="http://bingt.top/2023/02/0eb120d31265.html"/>
    <id>http://bingt.top/2023/02/0eb120d31265.html</id>
    <published>2023-02-17T11:41:00.000Z</published>
    <updated>2023-03-07T07:12:28.758Z</updated>
    
    
    <summary type="html">这是博客测试文</summary>
    
    
    
    <category term="C++" scheme="http://bingt.top/categories/C/"/>
    
    
    <category term="C++" scheme="http://bingt.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>博客的第一篇文章</title>
    <link href="http://bingt.top/2023/02/64b23c7f36bd.html"/>
    <id>http://bingt.top/2023/02/64b23c7f36bd.html</id>
    <published>2023-02-17T07:35:00.000Z</published>
    <updated>2023-07-16T09:13:27.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol>]]></content>
    
    
    <summary type="html">这是博客测试文</summary>
    
    
    
    <category term="博客方案" scheme="http://bingt.top/categories/%E5%8D%9A%E5%AE%A2%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="测试" scheme="http://bingt.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
